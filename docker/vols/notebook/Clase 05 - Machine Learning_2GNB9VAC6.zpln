{
  "paragraphs": [
    {
      "text": "print(s\"\"\"%html\n\u003ccenter\u003e\n    \u003ch1\u003e\u003ca href\u003d\"http://diplodatos.famaf.unc.edu.ar/\"\u003eDiplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones\u003c/a\u003e\u003c/h1\u003e\n    \u003ch2\u003eCurso \u003ca href\u003d\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\"\u003eProgramación Distribuida sobre Grandes Volúmenes de Datos\u003c/a\u003e\u003c/h2\u003e\n\u003c/center\u003e\n\n\u003cbr\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e Damián Barsotti  \u003c/h3\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    Facultad de Matemática Astronomía Física y Computación\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ca href\u003d\"http://www.unc.edu.ar\"\u003e\n    Universidad Nacional de Córdoba\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ccenter\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    \u003cimg src\u003d\"$baseDir/comun/logo%20UNC%20FAMAF%202016.png\" alt\u003d\"Drawing\" style\u003d\"width:50%;\"/\u003e\n    \u003c/a\u003e\n    \u003c/center\u003e\n\u003c/h3\u003e\n\n\u003cp style\u003d\"font-size:15px;\"\u003e\n    \u003cbr /\u003e\n        This work is licensed under a\n        \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003eCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International License\u003c/a\u003e.\n    \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003e\n        \u003cimg alt\u003d\"Creative Commons License\" style\u003d\"border-width:0;vertical-align:middle;float:right\" src\u003d\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /\u003e\n    \u003c/a\u003e\n\u003c/p\u003e\n\"\"\")\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.496",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n    \u003ch1\u003e\u003ca href\u003d\"http://diplodatos.famaf.unc.edu.ar/\"\u003eDiplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones\u003c/a\u003e\u003c/h1\u003e\n    \u003ch2\u003eCurso \u003ca href\u003d\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\"\u003eProgramación Distribuida sobre Grandes Volúmenes de Datos\u003c/a\u003e\u003c/h2\u003e\n\u003c/center\u003e\n\n\u003cbr\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e Damián Barsotti  \u003c/h3\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    Facultad de Matemática Astronomía Física y Computación\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ca href\u003d\"http://www.unc.edu.ar\"\u003e\n    Universidad Nacional de Córdoba\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ccenter\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    \u003cimg src\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt\u003d\"Drawing\" style\u003d\"width:50%;\"/\u003e\n    \u003c/a\u003e\n    \u003c/center\u003e\n\u003c/h3\u003e\n\n\u003cp style\u003d\"font-size:15px;\"\u003e\n    \u003cbr /\u003e\n        This work is licensed under a\n        \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003eCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International License\u003c/a\u003e.\n    \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003e\n        \u003cimg alt\u003d\"Creative Commons License\" style\u003d\"border-width:0;vertical-align:middle;float:right\" src\u003d\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /\u003e\n    \u003c/a\u003e\n\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439496_1672767359",
      "id": "20171030-111535_1286884722",
      "dateCreated": "2021-11-13 21:53:59.496",
      "status": "READY"
    },
    {
      "text": "%md\n### Antes de comenzar\n1. Lanzar terminal\n1. Actualizar repo:\n```sh\ncd diplodatos_bigdata\ngit pull\n```\n1. Lanzar [Zeppelin](http://zeppelin.apache.org/) en docker:\n```sh\n./docker/zeppelin.sh\n```\n1. En navegador abrir [http://localhost:8080](http://localhost:8080)\n1. Seleccionar `Import note`\n1. Elegir json en `diplodatos_bigdata/clases/05_ml/note.zpln`\n2. Seleccionar `Clase 05 - Machine Learning`\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.496",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eAntes de comenzar\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eLanzar terminal\u003c/li\u003e\n\u003cli\u003eActualizar repo:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-sh\"\u003ecd diplodatos_bigdata\ngit pull\n\u003c/code\u003e\u003c/pre\u003e\n\u003col\u003e\n\u003cli\u003eLanzar \u003ca href\u003d\"http://zeppelin.apache.org/\"\u003eZeppelin\u003c/a\u003e en docker:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode class\u003d\"language-sh\"\u003e./docker/zeppelin.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003col\u003e\n\u003cli\u003eEn navegador abrir \u003ca href\u003d\"http://localhost:8080\"\u003ehttp://localhost:8080\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeleccionar \u003ccode\u003eImport note\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eElegir json en \u003ccode\u003ediplodatos_bigdata/clases/05_ml/note.zpln\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eSeleccionar \u003ccode\u003eClase 05 - Machine Learning\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439496_2051414201",
      "id": "20171030-111641_2139999376",
      "dateCreated": "2021-11-13 21:53:59.496",
      "status": "READY"
    },
    {
      "text": "%md\n## Areas del Big Data\n- Analitics (datos estructurados)\n- Streaming (real time)\n- **Machine Learning**\n- Análisis de Redes (grandes grafos)\n- Visualización",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.496",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eAreas del Big Data\u003c/h2\u003e\n\u003cul\u003e\n  \u003cli\u003eAnalitics (datos estructurados)\u003c/li\u003e\n  \u003cli\u003eStreaming (real time)\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eMachine Learning\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003eAnálisis de Redes (grandes grafos)\u003c/li\u003e\n  \u003cli\u003eVisualización\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439496_923613472",
      "id": "20181026-174017_2147321926",
      "dateCreated": "2021-11-13 21:53:59.496",
      "status": "READY"
    },
    {
      "text": "%md\n![](https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/unified_stack.png)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.496",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/unified_stack.png\" /\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439496_96296220",
      "id": "20181026-174035_2101012250",
      "dateCreated": "2021-11-13 21:53:59.496",
      "status": "READY"
    },
    {
      "text": "%md\n# Machine Learning\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.496",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eMachine Learning\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439496_1620411190",
      "id": "20171030-131603_726204322",
      "dateCreated": "2021-11-13 21:53:59.496",
      "status": "READY"
    },
    {
      "text": "println(s\"\"\"%html\n\u003ch4\u003eProgramación tradicional:\u003c/h4\u003e\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/00-prog-tradic.svg\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n\n//%md\n//### Programación tradicional\n\n//%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n//  [note:Datos Entrada{bg:cornsilk}]-\u003e[Algoritmo{bg:red}]\n//  [Algoritmo{bg:red}]-\u003e[note:Datos Salida{bg:cornsilk}]\n//*/%%%\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch4\u003eProgramación tradicional:\u003c/h4\u003e\n\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/00-prog-tradic.svg\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439496_720230468",
      "id": "20171030-131619_420103761",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "text": "%md\n### Machine Learning \u003d algoritmos que generan algoritmos.",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eMachine Learning \u003d algoritmos que generan algoritmos.\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_377499524",
      "id": "20171030-131659_166449551",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "title": "Entrenamiento:",
      "text": "println(s\"\"\"%html\n\u003cimg src\u003d\"$baseDir/05_ml/01-entrenamiento.svg\" alt\u003d\"Drawing\" style\u003d\"width: 100%;\"/\u003e\n\"\"\")\n\n/*\n%md\n#### Entrenamiento:\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:Datos;Entrenamiento{bg:cornsilk}]-\u003e[Algoritmo;ML{bg:red}]\n  [Algoritmo;ML{bg:red}]-\u003e[note:Algoritmo;(modelo){bg:orange}]\n%%%\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/01-entrenamiento.svg\" alt\u003d\"Drawing\" style\u003d\"width: 100%;\"/\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_1453643303",
      "id": "20171030-131720_1434322443",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "title": "Uso:",
      "text": "println(s\"\"\"%html\n\u003cimg src\u003d\"$baseDir/05_ml/02-uso.svg\" alt\u003d\"Drawing\" style\u003d\"width: 100%;\"/\u003e\n\"\"\")\n\n/*\n%md\n#### Uso:\n\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:Datos Entrada{bg:cornsilk}]-\u003e[Algoritmo;(modelo){bg:orange}]\n  [Algoritmo;(Modelo)]-\u003e[note:Datos Salida{bg:cornsilk}]\n%%%\n\n*/\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/02-uso.svg\" alt\u003d\"Drawing\" style\u003d\"width: 100%;\"/\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_1513299552",
      "id": "20171030-113042_604094829",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "title": "Todo junto:",
      "text": "println(s\"\"\"%html\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/03-todo-junto.svg\" alt\u003d\"Drawing\" style\u003d\"width: 90%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n\n/*\n%md\n%%% yuml type\u003dclass style\u003dplain dir\u003dlr format\u003dsvg\n  [note:Datos Entrada{bg:cornsilk}]-\u003e[Algoritmo;(modelo){bg:orange}]\n  [note:Datos;Entrenamiento{bg:cornsilk}]-\u003e[Algoritmo;ML]\n  [Algoritmo;ML{bg:red}]-\u003e[Algoritmo;(modelo){bg:orange}]\n  [Algoritmo;(Modelo)]-\u003e[note:Datos Salida{bg:cornsilk}]\n%%%\n*/\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/03-todo-junto.svg\" alt\u003d\"Drawing\" style\u003d\"width: 90%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_2013924189",
      "id": "20171030-115900_1686761842",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "text": "%md\n### En big data se usan algoritmos ML **paralelizables**\n\n(más adelante veremos workaround)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eEn big data se usan algoritmos ML \u003cstrong\u003eparalelizables\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003e(más adelante veremos workaround)\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_2121520920",
      "id": "20191204-173047_1469538210",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "text": "%md\n# Spark Machine Learning Library (MLlib)\n\n* Algoritmos ML: clasificación, regresión, clustering, filtrado colaborativo (recomendación), etc.\n* Manejo de features (featurization): extracción de features, transformación, reducción de dimensionalidad, selección, etc.\n* Pipelines: abstracción que representa flujo de trabajo en ML.\n* Persistencia: carga y guardado de modelos, algoritmos y pipelines.\n* Utilidades: álgebra lineal, estadística, manejo de datos, etc.\n* 2 APIs: sobre RDD (spark.mllib) o DataFrame (spark.ml)\n\n### Importante\n\nEn 2.0.0+ La API basada en **Dataframe** (spark.ml) es *primary API*:\n\n* No se agregan nuevas características a la API RDD (spark.mllib).\n* Solo se le corregirán errores.\n* Se irán agregando features de RDD a la API DataFrame.\n\n#### Por lo tanto veremos la API basada en DataFrame\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eSpark Machine Learning Library (MLlib)\u003c/h1\u003e\n\u003cul\u003e\n  \u003cli\u003eAlgoritmos ML: clasificación, regresión, clustering, filtrado colaborativo (recomendación), etc.\u003c/li\u003e\n  \u003cli\u003eManejo de features (featurization): extracción de features, transformación, reducción de dimensionalidad, selección, etc.\u003c/li\u003e\n  \u003cli\u003ePipelines: abstracción que representa flujo de trabajo en ML.\u003c/li\u003e\n  \u003cli\u003ePersistencia: carga y guardado de modelos, algoritmos y pipelines.\u003c/li\u003e\n  \u003cli\u003eUtilidades: álgebra lineal, estadística, manejo de datos, etc.\u003c/li\u003e\n  \u003cli\u003e2 APIs: sobre RDD (spark.mllib) o DataFrame (spark.ml)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eImportante\u003c/h3\u003e\n\u003cp\u003eEn 2.0.0+ La API basada en \u003cstrong\u003eDataframe\u003c/strong\u003e (spark.ml) es \u003cem\u003eprimary API\u003c/em\u003e:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eNo se agregan nuevas características a la API RDD (spark.mllib).\u003c/li\u003e\n  \u003cli\u003eSolo se le corregirán errores.\u003c/li\u003e\n  \u003cli\u003eSe irán agregando features de RDD a la API DataFrame.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003ePor lo tanto veremos la API basada en DataFrame\u003c/h4\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_885945100",
      "id": "20181023-183558_542765570",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "text": "%md\n### Tipos Básicos\n\n#### Todo es\n* Transformer \u003d Toma datos y devuelve datos. Ej. algoritmo , modelos, query SQL, etc.\n* Estimator \u003d Toma datos y devuelve un transformer (Ej. algoritmo ML).\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.497",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 14.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTipos Básicos\u003c/h3\u003e\n\u003ch4\u003eTodo es\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eTransformer \u003d Toma datos y devuelve datos. Ej. algoritmo , modelos, query SQL, etc.\u003c/li\u003e\n\u003cli\u003eEstimator \u003d Toma datos y devuelve un transformer (Ej. algoritmo ML).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_1086902684",
      "id": "20171030-131935_1623447756",
      "dateCreated": "2021-11-13 21:53:59.497",
      "status": "READY"
    },
    {
      "title": "Entrenamiento:",
      "text": "println(s\"\"\"%html\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/04-entrenamiento.svg\" alt\u003d\"Drawing\" style\u003d\"width: 90%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n\n/*\n%md\n#### Entrenamiento:\n\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:Dataframe;Entrenamiento{bg:cornsilk}]-\u003e[Estimator;(algoritmo ML)|fit()]\n  [Estimator;(algoritmo ML)|fit(){bg:red}]-\u003e[note:Transformer;(modelo){bg:orange}]\n%%%\n\n  [Dataframe Entrenamiento{bg:cornsilk}]-\u003e[Estimator (algoritmo ML)|*fit()*{bg:red}]\n  [Estimator (algoritmo ML)|fit(){bg:red}]-\u003e[Transformer (modelo){bg:orange}]\n*/\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.503",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/04-entrenamiento.svg\" alt\u003d\"Drawing\" style\u003d\"width: 90%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439497_628868361",
      "id": "20171030-132019_183881887",
      "dateCreated": "2021-11-13 21:53:59.503",
      "status": "READY"
    },
    {
      "title": "Uso:",
      "text": "println(s\"\"\"%html\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/05-uso.svg\" alt\u003d\"Drawing\" style\u003d\"width: 80%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n\n/*\n%md\n#### Uso:\n\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:Dataframe;Entrada{bg:cornsilk}]-\u003e[Transformer;(modelo)|transform(){bg:orange}]\n  [Transformer;(modelo)|transform(){bg:orange}]-\u003e[note:Dataframe;Salida{bg:cornsilk}]\n%%%\n [Dataframe Entrada{bg:cornsilk}]-\u003e[Transformer (modelo)|*transform()*{bg:orange}]\n  [Transformer (modelo)|_transform()_{bg:orange}]-\u003e[Dataframe Salida{bg:cornsilk}]\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.504",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/05-uso.svg\" alt\u003d\"Drawing\" style\u003d\"width: 80%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439504_2022116607",
      "id": "20171030-124531_1138034350",
      "dateCreated": "2021-11-13 21:53:59.504",
      "status": "READY"
    },
    {
      "text": "%md\n## Ejemplo\n\n### Predicción de género a partir del peso y la altura.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.504",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eEjemplo\u003c/h2\u003e\n\u003ch3\u003ePredicción de género a partir del peso y la altura.\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439504_1528515651",
      "id": "20171030-161240_1927838355",
      "dateCreated": "2021-11-13 21:53:59.504",
      "status": "READY"
    },
    {
      "title": "Lectura datos de entrada",
      "text": "%pyspark\n\ninputFile \u003d \"../../diplodatos_bigdata/ds/people_sex_height_age_weight.json\"\n\npeople \u003d spark.read.json(inputFile) \\\n    .select(\"kgs\", \"mts\", \"sex\") \\\n    .repartition(sc.defaultParallelism) \\\n    .cache()\n    \nprint(\"Cantidad de filas: {}. Cantidad de particiones: {}.\".format(people.count(), people.rdd.getNumPartitions()))\n\nz.show(people.sample(False,0.001))",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.505",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {},
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439504_1479599859",
      "id": "20201029-105118_47901818",
      "dateCreated": "2021-11-13 21:53:59.504",
      "status": "READY"
    },
    {
      "title": "División datos para entrenamiento y test",
      "text": "%pyspark\n\ntrainDF, testDF \u003d people.randomSplit([0.95, 0.05]) \n\nprint(f\"\"\"%table\nCantidad Train \\t Cantidad Test\n{trainDF.count()} \\t {testDF.count()}\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.505",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Cantidad Train ": "string",
                      " Cantidad Test": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439505_573071382",
      "id": "20201029-105132_386130372",
      "dateCreated": "2021-11-13 21:53:59.505",
      "status": "READY"
    },
    {
      "title": "Features",
      "text": "%md\n### Features\n\nLos algoritmos ML utilizan datos numeŕicos:\n\n* Como **entrada** toman un vector numérico - **vector de features**\n* Como predicción de **salida** producen números - **labels**\n\nPor lo tanto hay que transformar los datos de entrada.",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.505",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "title": false,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eFeatures\u003c/h3\u003e\n\u003cp\u003eLos algoritmos ML utilizan datos numeŕicos:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eComo \u003cstrong\u003eentrada\u003c/strong\u003e toman un vector numérico - \u003cstrong\u003evector de features\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eComo predicción de \u003cstrong\u003esalida\u003c/strong\u003e producen números - \u003cstrong\u003elabels\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePor lo tanto hay que transformar los datos de entrada.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439505_1125747668",
      "id": "20171030-162516_498978901",
      "dateCreated": "2021-11-13 21:53:59.505",
      "status": "READY"
    },
    {
      "title": "Transformador de features:",
      "text": "println(s\"\"\"%html\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/06-transformador-features.svg\" alt\u003d\"Drawing\" style\u003d\"width: 80%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n\n/*\n%md\n### Transformador de features\n\n\n        %%% yuml type\u003dclass style\u003dplain format\u003dsvg\n          [note:Dataframe;Entrada{bg:cornsilk}]-\u003e[Transformer;(featurizer)|transform(){bg:orange}]\n          [Transformer;(featurizer)|transform(){bg:orange}]-\u003e[note:Dataframe; vector features{bg:cornsilk}]\n        %%%\n\n#### (todo es Transformer o Estimator)\n\n[Dataframe Entrada{bg:cornsilk}]-\u003e[Transformer (featurizer)|*transform()*{bg:orange}]\n          [Transformer (featurizer)|*transform()*{bg:orange}]-\u003e[Dataframe Features{bg:cornsilk}]\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.505",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/06-transformador-features.svg\" alt\u003d\"Drawing\" style\u003d\"width: 80%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439505_690685465",
      "id": "20181023-184758_264849729",
      "dateCreated": "2021-11-13 21:53:59.505",
      "status": "READY"
    },
    {
      "title": "Creación de vector de features (entrada)",
      "text": "%pyspark\nfrom pyspark.ml.feature import VectorAssembler\n\nvAssembler \u003d VectorAssembler(\n    inputCols\u003d[\"kgs\", \"mts\"],\n    outputCol\u003d\"features\")\n\ntrainAssembled \u003d vAssembler.transform(trainDF)\n\nz.show(trainAssembled.sample(False, 0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.506",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439506_1562191147",
      "id": "20171030-163816_785316912",
      "dateCreated": "2021-11-13 21:53:59.506",
      "status": "READY"
    },
    {
      "title": "Vector Assembler es un Transformer:",
      "text": "println(s\"\"\"%html\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/07-vector-assembler.svg\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n\n/*\n%md\n#### VectorAssembler es un **Transformer**\n\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:trainDF{bg:cornsilk}]-\u003e[vAssembler;(modelo)|transform(){bg:orange}]\n  [vAssembler;(modelo)|transform(){bg:orange}]-\u003e[note:trainAssembled{bg:cornsilk}]\n%%%\n[trainDF{bg:cornsilk}]-\u003e[vAssembler|*transform()*{bg:orange}]\n  [vAssembler|*transform()*{bg:orange}]-\u003e[trainAssembled{bg:cornsilk}]\n\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.507",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/07-vector-assembler.svg\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439506_1943516254",
      "id": "20171030-170208_678915767",
      "dateCreated": "2021-11-13 21:53:59.507",
      "status": "READY"
    },
    {
      "title": "Creación de Labels (predicción)",
      "text": "%md (es necesario leer toda la entrada)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.507",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e(es necesario leer toda la entrada)\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439507_996822414",
      "id": "20171030-165531_1386883868",
      "dateCreated": "2021-11-13 21:53:59.507",
      "status": "READY"
    },
    {
      "title": "Creación de Labels",
      "text": "%pyspark\n\nfrom pyspark.ml.feature import StringIndexer\n\nstrIndexer \u003d StringIndexer(\n  inputCol\u003d\"sex\",\n  outputCol\u003d\"label\")\n\n# indexer tiene que leer la entrada\nsexIndexer \u003d strIndexer.fit(trainAssembled)\n\ntrainFeaturized \u003d sexIndexer.transform(trainAssembled)\n\nz.show(trainFeaturized.sample(False, 0.002))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.509",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "kgs",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "mts",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "sex",
                        "visible": true,
                        "width": 267.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features",
                        "visible": true,
                        "width": 355.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "label",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439508_1452219788",
      "id": "20171030-164611_870874723",
      "dateCreated": "2021-11-13 21:53:59.509",
      "status": "READY"
    },
    {
      "title": "String Indexer es un Estimator:",
      "text": "println(s\"\"\"%html\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/08-string-indexer.svg\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\u003c/center\u003e\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/09-string-indexer.svg\" alt\u003d\"Drawing\" style\u003d\"width: 75%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n/*\n%md\n#### StringIndexer es un Estimator\n\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:trainAssembled{bg:cornsilk}]-\u003e[strIdexer;(algoritmo)|fit(){bg:red}]\n  [strIdexer;(algoritmo)|fit(){bg:red}]-\u003e[note:sexIndexer;(model){bg:orange}]\n%%%\n  [trainAssembled{bg:cornsilk}]-\u003e[strIndexer|*fit()*{bg:red}]\n  [strIndexer|*fit()*{bg:red}]-\u003e[sexIndexer{bg:orange}]\n\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:trainAssembled{bg:cornsilk}]-\u003e[sexIndexer;(model)|transform(){bg:orange}]\n  [sexIndexer;(model)|transform(){bg:orange}]-\u003e[note:trainFeaturized{bg:cornsilk}]\n%%%\n[trainAssembled{bg:cornsilk}]-\u003e[sexIndexer|*transform()*{bg:orange}]\n  [sexIndexer|*transform()*{bg:orange}]-\u003e[trainFeaturized{bg:cornsilk}]\n\n*/\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.509",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/08-string-indexer.svg\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\u003c/center\u003e\n\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/09-string-indexer.svg\" alt\u003d\"Drawing\" style\u003d\"width: 75%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439509_193169602",
      "id": "20171030-170028_1904063913",
      "dateCreated": "2021-11-13 21:53:59.509",
      "status": "READY"
    },
    {
      "text": "%md\n\n#### Más información\n* [Spark Docs - Extracting, transforming and selecting features](http://spark.apache.org/docs/latest/ml-features.html).\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.509",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eMás información\u003c/h4\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-features.html\"\u003eSpark Docs - Extracting, transforming and selecting features\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439509_1093002902",
      "id": "20201028-171210_58115006",
      "dateCreated": "2021-11-13 21:53:59.509",
      "status": "READY"
    },
    {
      "text": "%md\n### Visualización",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.509",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eVisualización\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439509_603397553",
      "id": "20171030-182836_1299248311",
      "dateCreated": "2021-11-13 21:53:59.509",
      "status": "READY"
    },
    {
      "title": "Image plotter en Python",
      "text": "%pyspark\n\ndef plot_classification(df, surfaceDF\u003dNone, prob\u003dFalse):\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import matplotlib.cm as cm\n\n    from matplotlib.colors import ListedColormap, LinearSegmentedColormap\n\n    cmap_light \u003d LinearSegmentedColormap.from_list(\"light\", [\u0027#FF5555\u0027, \u0027#5555FF\u0027])\n    cmap_pastel \u003d LinearSegmentedColormap.from_list(\"pastel\", [\u0027#FF8888\u0027, \u0027#8888FF\u0027])\n    cmap_bold \u003d ListedColormap([\u0027#FF0000\u0027, \u0027#00FF00\u0027, \u0027#0000FF\u0027])\n\n    # helper function to display in Zeppelin\n    def show(p):\n        from io import BytesIO\n        import base64\n        #img \u003d StringIO()\n        img \u003d BytesIO()\n        p.savefig(img, format\u003d\u0027png\u0027)#,dpi\u003d600)\n        img.seek(0)\n        print(\"%html \u003cdiv style\u003d\u0027width:600px\u0027\u003e\u003cimg src\u003d\\\"data:image/png;base64,\" + base64.encodebytes(img.getvalue()).decode().replace(\u0027\\n\u0027, \u0027\u0027) + \"\\\"/\u003e\u003c/div\u003e\")\n        #print(\"%html \u003cdiv style\u003d\u0027width:600px\u0027\u003e\u003cimg src\u003d\\\"data:image/png;base64,\" + img.buf.encode(\u0027base64\u0027).replace(\u0027\\n\u0027, \u0027\u0027) + \"\\\"/\u003e\u003c/div\u003e\")\n\n    plt.close(\u0027all\u0027)\n\n    plt.autoscale(enable\u003dTrue, axis\u003d\u0027x\u0027, tight\u003dTrue)\n\n    if surfaceDF:\n\n        if prob:\n            pSTable \u003d surfaceDF.select(\u0027kgs\u0027,\u0027mts\u0027,\u0027prob\u0027).toPandas()\n            Z \u003d pSTable[\u0027prob\u0027]\n        else:\n            pSTable \u003d surfaceDF.select(\u0027kgs\u0027,\u0027mts\u0027,\u0027prediction\u0027).toPandas()\n            Z \u003d pSTable[\u0027prediction\u0027]\n\n        xs \u003d pSTable[\u0027kgs\u0027]\n        ys \u003d pSTable[\u0027mts\u0027]\n\n        xUs \u003d xs.unique()\n        yUs \u003d ys.unique()\n\n        xx, yy \u003d np.meshgrid(xUs,yUs)\n\n        Z \u003d Z.values.reshape(xx.shape).transpose()\n\n        if prob:\n            plt.pcolormesh(xx, yy, Z, shading\u003d\u0027auto\u0027, cmap\u003dcmap_light)\n        else:\n            plt.pcolormesh(xx, yy, Z, shading\u003d\u0027auto\u0027, cmap\u003dcmap_pastel)\n\n        plt.axis([xs.min(), xs.max(), ys.min(), ys.max()])\n\n    pTable \u003d df.select(\u0027kgs\u0027,\u0027mts\u0027,\u0027label\u0027).toPandas().sample(frac\u003d1)\n\n    xs \u003d pTable[\u0027kgs\u0027]\n    ys \u003d pTable[\u0027mts\u0027]\n    cs \u003d pTable[\u0027label\u0027]\n    plt.scatter(xs, ys, c\u003dcs, cmap\u003dcmap_bold, alpha\u003d0.5, s\u003d16)\n    plt.xlabel(\u0027kgs\u0027)\n    plt.ylabel(\u0027mts\u0027)\n\n    show(plt)\n    plt.close()\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.509",
      "progress": 0,
      "config": {
        "lineNumbers": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 10.0,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439509_397425140",
      "id": "20161102-154506_492289084",
      "dateCreated": "2021-11-13 21:53:59.509",
      "status": "READY"
    },
    {
      "title": "Plot train data",
      "text": "%pyspark\nplot_classification(trainFeaturized)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_763269031",
      "id": "20171030-173939_397652020",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "text": "%md\n## Clasificación\n\n### Decision Tree\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eClasificación\u003c/h2\u003e\n\u003ch3\u003eDecision Tree\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_505793334",
      "id": "20171030-182312_417188960",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "title": "Entrenamiento",
      "text": "%pyspark\nfrom pyspark.ml.classification import DecisionTreeClassifier\n\n# Se crea el Estimator\ndtEstimator \u003d DecisionTreeClassifier(\n                featuresCol\u003d\"features\",\n                labelCol\u003d\"label\")\n\n#print dtEstimator.explainParams()\n\ndtModel \u003d dtEstimator.fit(trainFeaturized)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_427826247",
      "id": "20161107-153258_1183600330",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "text": "println(s\"\"\"%html\n\u003cbr\u003e\n\u003ccenter\u003e\n\u003cimg src\u003d\"$baseDir/05_ml/10-decision-tree.svg\" alt\u003d\"Drawing\" style\u003d\"width: 100%;\"/\u003e\n\u003c/center\u003e\n\"\"\")\n/*\n%md\n\n\u003cbr\u003e\n\n%%% yuml type\u003dclass style\u003dplain format\u003dsvg\n  [note:trainFeaturized{bg:cornsilk}]-\u003e[dtEstimator;(algoritmo ML)|fit(){bg:red}]\n  [dtEstimator;(algoritmo ML)|fit(){bg:red}]-\u003e[note:dtModel;(model){bg:orange}]\n%%%\n[trainFeaturized{bg:cornsilk}]-\u003e[dtEstimator|*fit()*{bg:red}]\n  [dtEstimator|*fit()*{bg:red}]-\u003e[dtModel{bg:orange}]\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cbr\u003e\n\u003ccenter\u003e\n\u003cimg src\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/10-decision-tree.svg\" alt\u003d\"Drawing\" style\u003d\"width: 100%;\"/\u003e\n\u003c/center\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_1310880873",
      "id": "20171030-183244_477068133",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "title": "Probando el modelo",
      "text": "%pyspark\n\nfrom pyspark.sql import Row\n\nkgs \u003d float(z.input(\"Peso en kilos:\",\"80.0\"))\nmts \u003d float(z.input(\"Altura en metros:\",\"1.8\"))\n\ndfOneInput \u003d sc.parallelize([Row(kgs\u003dkgs,mts\u003dmts)]).toDF()\n\ndfOneFeaturized \u003d vAssembler.transform(dfOneInput)\n\ndfOnePrediction \u003d dtModel.transform(dfOneFeaturized)\n\nlabels \u003d sexIndexer.labels\n\nfullGender \u003d { \"F\" : \"Femenino\", \"M\" : \"Masculino\"}\n\npred \u003d dfOnePrediction.first().prediction\n\ngenre \u003d fullGender[labels[int(pred)]]\n\nprint(\"%html \u003ch3\u003eGénero: {}\u003c/h3\u003e\".format(genre))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": true,
        "fontSize": 14.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "peso en kilos:": "90",
          "Peso en kilos:": "65",
          "Altura en metros:": "1.5"
        },
        "forms": {
          "Peso en kilos:": {
            "type": "TextBox",
            "name": "Peso en kilos:",
            "displayName": "Peso en kilos:",
            "defaultValue": "80.0",
            "hidden": false
          },
          "Altura en metros:": {
            "type": "TextBox",
            "name": "Altura en metros:",
            "displayName": "Altura en metros:",
            "defaultValue": "1.8",
            "hidden": false
          }
        }
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_1438670763",
      "id": "20171031-115708_799482",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "title": "Featurize dataset de test",
      "text": "%pyspark\n\ntestAssembled \u003d vAssembler.transform(testDF)\ntestFeaturized \u003d sexIndexer.transform(testAssembled)\n\nz.show(testFeaturized.sample(False, 0.1))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string",
                      "label": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_861755006",
      "id": "20171030-191336_34491578",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "title": "Calcular grilla de kgs*mts para visualizar fondo",
      "text": "%pyspark\n\n#/* Crea grid peso*altura del fondo\n# * para el gráfico anterior\n#**********************************/\n\ndef createGrid():\n\n    from pyspark.sql.functions import min, max\n    \n    maxTics \u003d 256\n\n    def fgrid (x, min, max, tics):\n        tics2 \u003d tics - 2\n        return (float(x-1)*(max-min)+tics2*min)/tics2\n\n\n    minKgs, maxKgs, minMts, maxMts \u003d people.agg(min(\"kgs\"), max(\"kgs\"), min(\"mts\"), max(\"mts\")).first()\n\n    # 1.- numeracion ticks en x \n    # 2.- numeracion ticks en (x, y)\n    # 3.- todos los (kgs, mts) \n    return sc.parallelize(range(maxTics)) \\\n            .flatMap(lambda x: [ (x, y) for y in range(maxTics)]) \\\n            .map(lambda x_y: (fgrid(x_y[0], minKgs, maxKgs, maxTics), fgrid(x_y[1], minMts, maxMts, maxTics))) \\\n            .toDF([\"kgs\", \"mts\"])\n\n\ndfGrid \u003d createGrid()\n\ngrid \u003d vAssembler.transform(dfGrid).cache()\nz.show(grid.limit(5))",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {},
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_125660692",
      "id": "20201028-174622_901506110",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "title": "Predecimos grilla del fondo",
      "text": "%pyspark\n# Creo predicciones de la grilla\ngridPredictionDT \u003d dtModel.transform(grid)\n\nz.show(gridPredictionDT.sample(False, 0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string",
                      "rawPrediction": "string",
                      "probability": "string",
                      "prediction": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_1690554496",
      "id": "20171030-185922_914672286",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "title": "Plot Decision Tree Predictions",
      "text": "%pyspark\nplot_classification(testFeaturized, surfaceDF\u003dgridPredictionDT)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_919501585",
      "id": "20171030-191207_1802786448",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "title": "Ejercicio",
      "text": "%md\nModifique el siguiente programa para aumentar la **profundidad** del árbol de decisión a 10.\n\n#### Ayuda\n\n* Busque en documentación [API Python Spark - Decision Trees](http://spark.apache.org/docs/2.2.1/api/python/pyspark.ml.html#pyspark.ml.classification.DecisionTreeClassifier).\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.510",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eModifique el siguiente programa para aumentar la \u003cstrong\u003eprofundidad\u003c/strong\u003e del árbol de decisión a 10.\u003c/p\u003e\n\u003ch4\u003eAyuda\u003c/h4\u003e\n\u003cul\u003e\n  \u003cli\u003eBusque en documentación \u003ca href\u003d\"http://spark.apache.org/docs/2.2.1/api/python/pyspark.ml.html#pyspark.ml.classification.DecisionTreeClassifier\"\u003eAPI Python Spark - Decision Trees\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439510_1185617672",
      "id": "20171030-192632_1207126648",
      "dateCreated": "2021-11-13 21:53:59.510",
      "status": "READY"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.ml.classification import DecisionTreeClassifier\n\n# Se crea el Estimator\ndtEstimator2 \u003d DecisionTreeClassifier(\n                featuresCol\u003d\"features\",\n                labelCol\u003d\"label\",\n                ...)\n\n\n# Se crea el modelo con los datos de test featurizados\ndtModel2 \u003d dtEstimator2...\n\n# Se predice la grilla\ngridPredictionDT2 \u003d dtModel2.transform(grid)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.512",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439512_1380412580",
      "id": "20171030-192143_1165730818",
      "dateCreated": "2021-11-13 21:53:59.512",
      "status": "READY"
    },
    {
      "title": "Plot Decision Tree Predictions",
      "text": "%pyspark\nplot_classification(testFeaturized, surfaceDF\u003dgridPredictionDT2)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_2030130289",
      "id": "20161107-153542_1780323791",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "text": "%md\n\n### Random Forest\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eRandom Forest\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_99787683",
      "id": "20171030-195005_486215707",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "title": "Creación del modelo",
      "text": "%pyspark\nfrom pyspark.ml.classification import RandomForestClassifier\n\n# Se crea el Estimator\nrfEstimator \u003d RandomForestClassifier(\n                featuresCol\u003d\"features\",\n                labelCol\u003d\"label\",\n                numTrees\u003d100)\n\nrfModel \u003d rfEstimator.fit(trainFeaturized)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14.0,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_614194486",
      "id": "20171030-034039_1210912394",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "title": "Predecimos grilla del fondo",
      "text": "%pyspark\n\ngridPredictionRF \u003d rfModel.transform(grid)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_1185279491",
      "id": "20171030-195356_14273686",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "title": "Plot Random Forest",
      "text": "%pyspark\n\nplot_classification(testFeaturized, surfaceDF\u003dgridPredictionRF)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14.0,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_933758371",
      "id": "20171030-034111_1613140514",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "text": "%md\n\n### Logistic Regression\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eLogistic Regression\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_1366536902",
      "id": "20171030-200155_1231865651",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "title": "Creación del modelo",
      "text": "%pyspark\nfrom pyspark.ml.classification import LogisticRegression\n\n# Se crea el Estimator\nlrEstimator \u003d LogisticRegression(\n                maxIter\u003d100,\n                labelCol\u003d\"label\",\n                regParam\u003d0.01)\n\nlrModel \u003d lrEstimator.fit(trainFeaturized)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_717601424",
      "id": "20161107-130547_297924932",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "title": "Probando el modelo",
      "text": "%pyspark\n\nfrom pyspark.sql import Row\n\nkgs \u003d float(z.input(\"Peso en kilos:\",\"80.0\"))\nmts \u003d float(z.input(\"Altura en metros:\",\"1.8\"))\n\ndfOneInput \u003d sc.parallelize([Row(kgs\u003dkgs,mts\u003dmts)]).toDF()\n\ndfOneFeaturized \u003d vAssembler.transform(dfOneInput)\n\ndfOnePrediction \u003d dtModel.transform(dfOneFeaturized)\n\nlabels \u003d sexIndexer.labels\n\nposF \u003d labels.index(\"F\")\n\nfemProb \u003d dfOnePrediction.first().probability[posF]\n\nfemProbPerc \u003d int(round(100.0 * femProb))\n\nprint(\"%html \u003ch3\u003eProbabilidad que sea mujer: {}%\u003c/h3\u003e\".format(femProbPerc))\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.514",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": true,
        "fontSize": 14.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "Peso en kilos:": "95.0",
          "Altura en metros:": "1.7"
        },
        "forms": {
          "Peso en kilos:": {
            "type": "TextBox",
            "name": "Peso en kilos:",
            "displayName": "Peso en kilos:",
            "defaultValue": "80.0",
            "hidden": false
          },
          "Altura en metros:": {
            "type": "TextBox",
            "name": "Altura en metros:",
            "displayName": "Altura en metros:",
            "defaultValue": "1.8",
            "hidden": false
          }
        }
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_1351865853",
      "id": "20171031-121619_277408470",
      "dateCreated": "2021-11-13 21:53:59.514",
      "status": "READY"
    },
    {
      "title": "Predecimos grilla del fondo",
      "text": "%pyspark\n\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.functions import lit, udf\n\ndef ith_(v, i):\n    try:\n        return float(v[i])\n    except ValueError:\n        return None\n\nith \u003d udf(ith_, DoubleType())\n\n\ngridPredictionLR \u003d lrModel.transform(grid) \\\n                    .select(\"*\", ith(\"probability\",lit(1-posF)).alias(\"prob\"))\n\nz.show(gridPredictionLR.sample(False,0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "kgs",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "mts",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rawPrediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "probability",
                        "visible": true,
                        "width": 254.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prob",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string",
                      "rawPrediction": "string",
                      "probability": "string",
                      "prediction": "string",
                      "prob": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439514_2096955479",
      "id": "20171030-202050_1263604133",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Plot Logistic Regression",
      "text": "%pyspark\n\nplot_classification(testFeaturized, surfaceDF\u003dgridPredictionLR, prob\u003dTrue)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 12.0,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_413188630",
      "id": "20161107-131714_601581381",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Logistic Regression with Poly expansion",
      "text": "%md\n\n* El algoritmo ML *Logistic Regression* es un algoritmo de clasificación logísitica **lineal**. \n* Esta limitación puede salvarse aumentando la dimensión del espacio:\n\n    ![](https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/dimension_expansion.png)\n\n### Para lograrlo puede utilizarse [Spark Polinomial Expansion](http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion).\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003eEl algoritmo ML \u003cem\u003eLogistic Regression\u003c/em\u003e es un algoritmo de clasificación logísitica \u003cstrong\u003elineal\u003c/strong\u003e.\u003c/li\u003e\n  \u003cli\u003eEsta limitación puede salvarse aumentando la dimensión del espacio:\n    \u003cp\u003e\u003cimg src\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/dimension_expansion.png\" /\u003e\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePara lograrlo puede utilizarse \u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion\"\u003eSpark Polinomial Expansion\u003c/a\u003e.\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_439374850",
      "id": "20171030-204410_530582793",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Ejercicio",
      "text": "%md\n\nModificar el siguiente programa para utilizar [Spark Polinomial Expansion](http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion) hasta grado 3.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eModificar el siguiente programa para utilizar \u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion\"\u003eSpark Polinomial Expansion\u003c/a\u003e hasta grado 3.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_143412889",
      "id": "20171030-205821_996337765",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Logistic Regression con Poly expansion",
      "text": "%pyspark\n\nfrom pyspark.ml.feature import PolynomialExpansion\n\npolyExpansion \u003d PolynomialExpansion( \n    inputCol\u003d\"features\",\n    outputCol\u003d\"features_expansion\",\n    degree\u003d...) # llenar (ver documentacion)\n\ntrainFeaturizedPoly \u003d polyExpansion.transform(trainFeaturized)\n\nlrEstimatorPoly \u003d LogisticRegression(\n    featuresCol\u003d..., # llenar\n    maxIter\u003d100,\n    regParam\u003d0.01)\n\nlrModelPoly \u003d lrEstimatorPoly.fit(...) # llenar\n\ngridPoly \u003d polyExpansion.transform(grid)\n\ngridPredictionLRPoly \u003d lrModelPoly.transform(gridPoly) \\\n                            .select(\"*\", ith(\"probability\",lit(1-posF)).alias(\"prob\"))\n                            \nz.show(gridPredictionLRPoly.sample(False,0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "kgs",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "mts",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features_expansion",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rawPrediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "probability",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prob",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string",
                      "features_expansion": "string",
                      "rawPrediction": "string",
                      "probability": "string",
                      "prediction": "string",
                      "prob": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_156756517",
      "id": "20201029-105351_101361532",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "text": "%pyspark\n\nplot_classification(testFeaturized, surfaceDF\u003dgridPredictionLRPoly, prob\u003dTrue)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_107989437",
      "id": "20171030-040455_976462143",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "text": "%md\n## Clustering\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eClustering\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_949343857",
      "id": "20171030-212118_1749792392",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Creación de datos 3D al azar",
      "text": "%pyspark\n\nfrom pyspark.mllib.random import RandomRDDs\nfrom pyspark.ml.linalg import DenseVector\n\ndimension \u003d 3\ncantVect \u003d 50\ndisper \u003d 5.0\n\n# Creo cantVect puntos con distribucion normal centrado en 5 ptos distintos\n\ndataset1 \u003d RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector(v)) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset2 \u003d RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0]+disper,v[1],v[2]])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset3 \u003d RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0],v[1]+disper,v[2]])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset4 \u003d RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0],v[1],v[2]+disper])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset5 \u003d RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0]+disper,v[1]+disper,v[2]+disper])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset \u003d dataset1.union(dataset2).union(dataset3).union(dataset4).union(dataset5)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_2117134833",
      "id": "20201029-115810_2102902904",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Dataset con puntos 3D",
      "text": "%pyspark\n\nz.show(dataset.sample(False, 0.1))",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_525830010",
      "id": "20181023-192830_1881710964",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Python plotter",
      "text": "%pyspark\n\ndef plot_clustering(df, centersDF\u003dNone):\n\n    import plotly as py\n    import plotly.graph_objs as go\n\n    pltWidth \u003d 800\n    pltHeight \u003d 600\n    \n    def plot(plot_dic, width\u003dpltWidth, **kwargs):\n        kwargs[\u0027output_type\u0027] \u003d \u0027div\u0027\n        plot_str \u003d py.offline.plot(plot_dic, **kwargs)\n        print(\u0027%%html \u003cdiv style\u003d\"width: %spx\"\u003e %s \u003c/div\u003e\u0027  % (width, plot_str))\n\n    pEvalData \u003d df.toPandas()\n\n    if centersDF:\n\n        pEvalCenters \u003d centersDF.toPandas()\n\n        eData \u003d go.Scatter3d(\n            x\u003dpEvalData.x,\n            y\u003dpEvalData.y,\n            z\u003dpEvalData.z,\n            showlegend\u003dFalse,\n            mode\u003d\u0027markers\u0027,\n            marker\u003ddict(\n                size\u003d1.5,\n                color\u003dpEvalData.prediction, # set color to an array/list of desired values\n                colorscale\u003d\u0027Rainbow\u0027   # choose a colorscale\n            ),\n            opacity\u003d0.6\n        )\n\n        eCenters \u003d go.Scatter3d(\n            x\u003dpEvalCenters.x,\n            y\u003dpEvalCenters.y,\n            z\u003dpEvalCenters.z,\n            showlegend\u003dFalse,\n            mode\u003d\u0027markers\u0027,\n            marker\u003ddict(\n                size\u003d3,\n                line \u003d dict(\n                    width \u003d 1,\n                    color \u003d \u0027black\u0027\n                ),\n                symbol\u003d\u0027x\u0027,\n                color\u003dpEvalCenters.prediction, # set color to an array/list of desired values\n                colorscale\u003d\u0027Rainbow\u0027   # choose a colorscale\n            ),\n            opacity\u003d1.0\n        )\n        \n        data \u003d [eData,eCenters]\n\n        layout \u003d go.Layout(\n            title\u003d\"Clusters\",\n            width\u003dpltWidth,\n            height\u003dpltHeight\n        )\n\n    else:\n\n        eData \u003d go.Scatter3d(\n            x\u003dpEvalData.x,\n            y\u003dpEvalData.y,\n            z\u003dpEvalData.z,\n            showlegend\u003dFalse,\n            mode\u003d\u0027markers\u0027,\n            marker\u003ddict(\n                size\u003d1.5,\n                line \u003d dict(\n                    width \u003d 1,\n                    color \u003d \u0027black\u0027\n                ),\n                color\u003d\u0027cyan\u0027\n            ),\n            opacity\u003d0.8\n        )\n\n        data \u003d [eData]\n\n        layout \u003d go.Layout(\n            title\u003d\"Data\",\n            width\u003dpltWidth,\n            height\u003dpltHeight\n        )\n        \n\n    plot({\n        \"data\": data,\n        \"layout\": layout\n    })\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "lineNumbers": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_1520437109",
      "id": "20171106-185738_491325525",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Plot data",
      "text": "%pyspark\n\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.functions import lit, udf\n\ndef ith_(v, i):\n    try:\n        return float(v[i])\n    except ValueError:\n        return None\n\nith \u003d udf(ith_, DoubleType())\n\ndsFeatures \u003d dataset \\\n    .select(ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\nplot_clustering(dsFeatures)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.515",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439515_47783053",
      "id": "20171031-015523_507876710",
      "dateCreated": "2021-11-13 21:53:59.515",
      "status": "READY"
    },
    {
      "title": "Creación de modelo k-means",
      "text": "%pyspark\n\nfrom pyspark.ml.clustering import KMeans\n\nkmeans \u003d KMeans(k \u003d 5, # set number of clusters\n                featuresCol\u003d\"features\",\n                predictionCol\u003d\"prediction\")\n\nmodel \u003d kmeans.fit(dataset)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.516",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439516_361224833",
      "id": "20171030-212354_434864230",
      "dateCreated": "2021-11-13 21:53:59.516",
      "status": "READY"
    },
    {
      "title": "Evaluación de datos de entrada con el modelo",
      "text": "%pyspark\n\nevalData \u003d model.transform(dataset) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\n\nz.show(evalData.sample(False, 0.1))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.516",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string",
                      "prediction": "string",
                      "x": "string",
                      "y": "string",
                      "z": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439516_1071911157",
      "id": "20171030-212654_1670049849",
      "dateCreated": "2021-11-13 21:53:59.516",
      "status": "READY"
    },
    {
      "title": "Evalúo centroides",
      "text": "%pyspark\n\ncenters \u003d sc.parallelize(model.clusterCenters()).map(lambda v: (DenseVector(v),)).toDF([\"features\"])\nevalCenters \u003d model.transform(centers) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\nz.show(evalCenters)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.517",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string",
                      "prediction": "string",
                      "x": "string",
                      "y": "string",
                      "z": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string",
                      "prediction": "string",
                      "x": "string",
                      "y": "string",
                      "z": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439517_1509014965",
      "id": "20201028-184223_1946095610",
      "dateCreated": "2021-11-13 21:53:59.517",
      "status": "READY"
    },
    {
      "title": "Clusters resultados",
      "text": "%pyspark\n\nplot_clustering(evalData,centersDF\u003devalCenters)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.517",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439517_647820222",
      "id": "20171031-020723_554273089",
      "dateCreated": "2021-11-13 21:53:59.517",
      "status": "READY"
    },
    {
      "text": "%md\n#### Ejercicio\n\nComplete el código siguiente para implementar un modelo que clusterice los datos anteriores utilizando Bisecting K-means.\n\n##### Ayuda\n* [Bsecting K-means](http://spark.apache.org/docs/2.2.1/ml-clustering.html#bisecting-k-means) en Spark.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.517",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eEjercicio\u003c/h4\u003e\n\u003cp\u003eComplete el código siguiente para implementar un modelo que clusterice los datos anteriores utilizando Bisecting K-means.\u003c/p\u003e\n\u003ch5\u003eAyuda\u003c/h5\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://spark.apache.org/docs/2.2.1/ml-clustering.html#bisecting-k-means\"\u003eBsecting K-means\u003c/a\u003e en Spark.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439517_1151438454",
      "id": "20191205-193346_728706229",
      "dateCreated": "2021-11-13 21:53:59.517",
      "status": "READY"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.ml.clustering import ...KMeans\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.functions import lit, udf\n\nbkMeans \u003d ...KMeans(k \u003d ..., # set number of clusters\n                featuresCol\u003d\"features\",\n                predictionCol\u003d\"prediction\")\n\nbkmModel \u003d ....fit(dataset)\n\ndef ith_(v, i):\n    try:\n        return float(v[i])\n    except ValueError:\n        return None\n\nith \u003d udf(ith_, DoubleType())\n\nbkmEvalData \u003d bkmModel.transform(dataset) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\nbkmCenters \u003d sc.parallelize(bkmModel....()).map(lambda v: (DenseVector(v),)).toDF([\"features\"])\n\nbkmEvalCenters \u003d bkmModel.transform(bkmCenters) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.517",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 12.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439517_511986309",
      "id": "20191205-193540_1402055631",
      "dateCreated": "2021-11-13 21:53:59.517",
      "status": "READY"
    },
    {
      "text": "%pyspark\n\nplot_clustering(bkmEvalData,centersDF\u003dbkmEvalCenters)",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.517",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 14.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439517_1667557934",
      "id": "20191205-194726_1959948215",
      "dateCreated": "2021-11-13 21:53:59.517",
      "status": "READY"
    },
    {
      "text": "%md\n\n### Documentación \n\n* [Spark ML Guide](http://spark.apache.org/docs/latest/ml-guide.html)\n* [Spark Python API ML Guide](http://spark.apache.org/docs/latest/api/python/pyspark.ml.html)\n* [Databricks ML Documentation](https://docs.databricks.com/spark/latest/mllib/index.html)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.517",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eDocumentación\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-guide.html\"\u003eSpark ML Guide\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/api/python/pyspark.ml.html\"\u003eSpark Python API ML Guide\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"https://docs.databricks.com/spark/latest/mllib/index.html\"\u003eDatabricks ML Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439517_872611593",
      "id": "20181023-195851_1433599159",
      "dateCreated": "2021-11-13 21:53:59.517",
      "status": "READY"
    },
    {
      "title": "FIN",
      "text": "val baseDir\u003d\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases\"\n//val baseDir\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\"\n//val baseDir\u003d\"http://localhost:8000\"\n\nz.put(\"baseDir\", baseDir)\nprint(\"\"\"%html\n\u003cscript\u003e\n    var heads \u003d document.getElementsByTagName(\u0027h2\u0027);\n    var numHeads \u003d heads.length;\n    var inner \u003d \"\";\n    var i \u003d 0;\n    var j \u003d 0;\n    while (i \u003c numHeads){\n        inner \u003d heads[i].innerHTML;\n        if (inner.search(\".-\") !\u003d -1 ) {\n            j++;\n            heads[i].innerHTML \u003d inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n\u003c/script\u003e\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-13 21:53:59.517",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cscript\u003e\n    var heads \u003d document.getElementsByTagName(\u0027h2\u0027);\n    var numHeads \u003d heads.length;\n    var inner \u003d \"\";\n    var i \u003d 0;\n    var j \u003d 0;\n    while (i \u003c numHeads){\n        inner \u003d heads[i].innerHTML;\n        if (inner.search(\".-\") !\u003d -1 ) {\n            j++;\n            heads[i].innerHTML \u003d inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n\u003c/script\u003e\nbaseDir: String \u003d https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636840439517_1433051535",
      "id": "20171030-041758_1069452526",
      "dateCreated": "2021-11-13 21:53:59.517",
      "status": "READY"
    }
  ],
  "name": "Clase 05 - Machine Learning",
  "id": "2GNB9VAC6",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}